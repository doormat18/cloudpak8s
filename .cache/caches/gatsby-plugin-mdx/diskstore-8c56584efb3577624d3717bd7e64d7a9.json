{"expireTime":9007200838004968000,"key":"gatsby-plugin-mdx-entire-payload-a16c594cd894c8ff2b187412d122faa5-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/davethiessen/github/cloudpak8s/node_modules/gatsby-theme-carbon/src/templates/Default.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":124,"offset":125},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":127},"end":{"line":5,"column":29,"offset":155},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Demos","position":{"start":{"line":8,"column":5,"offset":162},"end":{"line":8,"column":10,"offset":167},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":158},"end":{"line":8,"column":10,"offset":167},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are several examples of how to run existing applications with the Cloud Pak for Applications.   Most will guide through the process of analyzing an existing WebSphere application, migrating to a Liberty container and deploying on the OpenShift and Cloud Pak.   Listed below are great starting points to showcase this approach:","position":{"start":{"line":9,"column":1,"offset":168},"end":{"line":9,"column":333,"offset":500},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":168},"end":{"line":9,"column":333,"offset":500},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"Tutorial: ","position":{"start":{"line":11,"column":3,"offset":504},"end":{"line":11,"column":13,"offset":514},"indent":[]}},{"type":"link","title":null,"url":"https://www.ibm.com/cloud/garage/dte/tutorial/cloud-enabled-use-case-app-modernization-journey-part-1","children":[{"type":"text","value":"App Modernization Journey Part 1 - Evaluation","position":{"start":{"line":11,"column":14,"offset":515},"end":{"line":11,"column":59,"offset":560},"indent":[]}}],"position":{"start":{"line":11,"column":13,"offset":514},"end":{"line":11,"column":163,"offset":664},"indent":[]}}],"position":{"start":{"line":11,"column":3,"offset":504},"end":{"line":11,"column":163,"offset":664},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":502},"end":{"line":11,"column":163,"offset":664},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/ibm-cloud-architecture/cloudpak-for-applications","children":[{"type":"text","value":"IBM Cloud Architecture - Application Modernization Examples","position":{"start":{"line":12,"column":4,"offset":668},"end":{"line":12,"column":63,"offset":727},"indent":[]}}],"position":{"start":{"line":12,"column":3,"offset":667},"end":{"line":12,"column":133,"offset":797},"indent":[]}}],"position":{"start":{"line":12,"column":3,"offset":667},"end":{"line":12,"column":133,"offset":797},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/ibm-cloud-architecture/cloudpak-for-applications/tree/liberty","children":[{"type":"text","value":"Application Modernization","position":{"start":{"line":13,"column":8,"offset":805},"end":{"line":13,"column":33,"offset":830},"indent":[]}}],"position":{"start":{"line":13,"column":7,"offset":804},"end":{"line":13,"column":116,"offset":913},"indent":[]}},{"type":"text","value":" - Changing cloud runtime to Liberty and deploy on OpenShift","position":{"start":{"line":13,"column":116,"offset":913},"end":{"line":13,"column":176,"offset":973},"indent":[]}}],"position":{"start":{"line":13,"column":7,"offset":804},"end":{"line":13,"column":176,"offset":973},"indent":[]}}],"position":{"start":{"line":13,"column":3,"offset":800},"end":{"line":13,"column":176,"offset":973},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/ibm-cloud-architecture/cloudpak-for-applications/tree/was90","children":[{"type":"text","value":"Operational Modernization","position":{"start":{"line":14,"column":8,"offset":981},"end":{"line":14,"column":33,"offset":1006},"indent":[]}}],"position":{"start":{"line":14,"column":7,"offset":980},"end":{"line":14,"column":114,"offset":1087},"indent":[]}},{"type":"text","value":" - Maintaining a traditional WebSphere (tWAS) runtime but running within a container on OpenShift","position":{"start":{"line":14,"column":114,"offset":1087},"end":{"line":14,"column":211,"offset":1184},"indent":[]}}],"position":{"start":{"line":14,"column":7,"offset":980},"end":{"line":14,"column":211,"offset":1184},"indent":[]}}],"position":{"start":{"line":14,"column":3,"offset":976},"end":{"line":14,"column":211,"offset":1184},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/ibm-cloud-architecture/cloudpak-for-applications/tree/spring","children":[{"type":"text","value":"Spring Modernization","position":{"start":{"line":15,"column":8,"offset":1192},"end":{"line":15,"column":28,"offset":1212},"indent":[]}}],"position":{"start":{"line":15,"column":7,"offset":1191},"end":{"line":15,"column":110,"offset":1294},"indent":[]}},{"type":"text","value":"  -- Changing older Spring runtime versions to latest and deploying on OpenShift","position":{"start":{"line":15,"column":110,"offset":1294},"end":{"line":15,"column":190,"offset":1374},"indent":[]}}],"position":{"start":{"line":15,"column":7,"offset":1191},"end":{"line":15,"column":190,"offset":1374},"indent":[]}}],"position":{"start":{"line":15,"column":3,"offset":1187},"end":{"line":15,"column":190,"offset":1374},"indent":[]}}],"position":{"start":{"line":13,"column":3,"offset":800},"end":{"line":15,"column":190,"offset":1374},"indent":[3,3]}}],"position":{"start":{"line":12,"column":1,"offset":665},"end":{"line":15,"column":190,"offset":1374},"indent":[1,1,1]}}],"position":{"start":{"line":11,"column":1,"offset":502},"end":{"line":15,"column":190,"offset":1374},"indent":[1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":18,"column":1,"offset":1377},"end":{"line":18,"column":31,"offset":1407},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":18,"column":31,"offset":1407}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/davethiessen/github/cloudpak8s/node_modules/gatsby-theme-carbon/src/templates/Default.js\"\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h3>{`Demos`}</h3>\n    <p>{`There are several examples of how to run existing applications with the Cloud Pak for Applications.   Most will guide through the process of analyzing an existing WebSphere application, migrating to a Liberty container and deploying on the OpenShift and Cloud Pak.   Listed below are great starting points to showcase this approach:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Tutorial: `}<a parentName=\"li\" {...{\n          \"href\": \"https://www.ibm.com/cloud/garage/dte/tutorial/cloud-enabled-use-case-app-modernization-journey-part-1\"\n        }}>{`App Modernization Journey Part 1 - Evaluation`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/ibm-cloud-architecture/cloudpak-for-applications\"\n        }}>{`IBM Cloud Architecture - Application Modernization Examples`}</a><ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"https://github.com/ibm-cloud-architecture/cloudpak-for-applications/tree/liberty\"\n            }}>{`Application Modernization`}</a>{` - Changing cloud runtime to Liberty and deploy on OpenShift`}</li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"https://github.com/ibm-cloud-architecture/cloudpak-for-applications/tree/was90\"\n            }}>{`Operational Modernization`}</a>{` - Maintaining a traditional WebSphere (tWAS) runtime but running within a container on OpenShift`}</li>\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"https://github.com/ibm-cloud-architecture/cloudpak-for-applications/tree/spring\"\n            }}>{`Spring Modernization`}</a>{`  â€” Changing older Spring runtime versions to latest and deploying on OpenShift`}</li>\n        </ul></li>\n    </ul>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}